<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="your_database.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1394"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="0" parent="0"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="messages" custom_title="0" dock_id="2" table="4,8:mainmessages"/><dock_state state="000000ff00000000fd00000001000000020000043c000002b6fc0100000002fb000000160064006f0063006b00420072006f007700730065003101000000000000043c0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000ffffffff0000011800ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1*">-- Create a new messages table with an email column
CREATE TABLE IF NOT EXISTS new_messages (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    email TEXT NOT NULL,  -- Change from user_id to email
    content TEXT NOT NULL,
    response TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Copy data from the old messages table to the new one
INSERT INTO new_messages (email, content, response, created_at)
SELECT users.email, messages.content, messages.response, messages.created_at
FROM messages
JOIN users ON messages.user_id = users.id;  -- Join to get the email

-- Drop the old messages table
DROP TABLE messages;

-- Rename the new messages table to messages
ALTER TABLE new_messages RENAME TO messages;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
